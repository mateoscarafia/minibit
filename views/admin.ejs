<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>MinibitÂ©</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
      font-size: 12px;
    }

    body {
      background-color: #f5f5f5;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-size: cover;
      overflow: hidden;
    }

    .admin-container {
      width: 100%;
      height: 100px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .exam-results {
      height: 700px;
      width: 600px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
    }

    .exam-results-header {
      width: 100%;
      height: 80px;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      margin-bottom: 20px;
    }

    .users-container {
      height: 700px;
      width: 600px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      display: none;
    }

    .user-header {
      width: 100%;
      height: 100px;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      margin-bottom: 20px;
    }

    .user-header-form {
      margin-top: 10px;
      width: 100%;
      height: 40px;
      display: flex;
      gap: 15px;
      align-items: center;

      & span {
        cursor: pointer;
      }

      & span:hover {
        font-weight: bold;
      }
    }

    .user-item {
      width: 98%;
      margin-left: 1%;
      padding: 10px;
      display: flex;
      justify-content: space-around;
      align-items: center;
      border-bottom: 1px solid #ddd;
      cursor: pointer;

      & span {
        width: 30%;
      }

      & span:last-child {
        text-align: right;
        cursor: pointer;
      }

      & span:last-child:hover {
        font-weight: bold;
      }
    }

    .user-item:hover {
      background-color: #f1f1f1;
    }

    .user-items-container {
      width: 100%;
      height: 550px;
      overflow-y: scroll;
    }

    .content-container {
      height: 700px;
      width: 600px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      display: none;
    }

    .content-header {
      width: 100%;
      height: 100px;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      margin-bottom: 20px;
    }

    .content-header-form {
      margin-top: 10px;
      width: 100%;
      height: 40px;
      display: flex;
      gap: 15px;
      align-items: center;

      & span {
        cursor: pointer;
      }

      & span:hover {
        font-weight: bold;
      }
    }

    .content-item {
      width: 98%;
      margin-left: 1%;
      padding: 10px;
      display: flex;
      justify-content: space-around;
      align-items: center;
      border-bottom: 1px solid #ddd;
      cursor: pointer;

      & span {
        width: 30%;
      }

      & span:last-child {
        text-align: right;
        cursor: pointer;
      }

      & span:last-child:hover {
        font-weight: bold;
      }
    }

    .content-item:hover {
      background-color: #f1f1f1;
    }

    .content-items-container {
      width: 100%;
      height: 550px;
      overflow-y: scroll;
    }

    .tests-container {
      height: 700px;
      width: 600px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      display: none;
    }

    .tests-header {
      width: 100%;
      height: 100px;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      margin-bottom: 20px;
    }

    .tests-header-form {
      margin-top: 10px;
      width: 100%;
      height: 40px;
      display: flex;
      gap: 15px;
      align-items: center;

      & span {
        cursor: pointer;
      }

      & span:hover {
        font-weight: bold;
      }
    }

    .tests-item {
      width: 200px;
      margin-left: 1%;
      padding: 10px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: 8px;
      border: 1px solid #ddd;
      cursor: pointer;

      & span {
        width: 100px;
        text-align: center;
      }
    }

    .tests-item:hover {
      background-color: #f1f1f1;
    }

    .tests-items-container {
      padding-top: 20px;
      width: 100%;
      height: 690px;
      display: flex;
      flex-direction: column;
      gap: 10px;
      align-items: center;
      overflow-y: scroll;
    }

    .exam-results-item {
      width: 96%;
      padding: 10px 0;
      margin: 10px 2%;
      display: flex;
      justify-content: space-around;
      align-items: center;
      border-bottom: 1px solid #ddd;
      cursor: pointer;
    }

    .exam-results-item:hover {
      background-color: #f1f1f1;
    }

    .exam-results-items-container {
      width: 100%;
      height: 590px;
      overflow-y: scroll;
    }

    .exam-results-items-container::-webkit-scrollbar {
      display: none;
    }

    /* Hide scrollbar for IE, Edge and Firefox */
    .exam-results-items-container {
      -ms-overflow-style: none;
      /* IE and Edge */
      scrollbar-width: none;
      /* Firefox */
    }

    .color-ref {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background-color: red;
    }

    .admin_main_title {
      position: absolute;
      right: 0px;
      top: -30px;
      text-align: center;
      font-size: 14px;
      color: #000;
      text-transform: capitalize;
    }

    .lateral-menu {
      height: 400px;
      width: 200px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin-right: 30px;
      padding-top: 30px;
      position: relative;

      & div {
        width: 100%;
        height: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
      }

      & div:hover {
        background-color: #f1f1f1;
      }
    }

    input[type="text"] {
      width: 150px;
      height: 30px;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 12px;
    }

    .select-content-name {
      width: 180px;
      height: 30px;
      padding-left: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 12px;
      background-color: #fff;
    }


    textarea {
      width: 100%;
      height: 60px;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 12px;
    }

    .tests-container-form {
      display: none;
      width: 30%;
      left: 35%;
      height: 600px;
      border: 1px solid #ddd;
      border-radius: 4px;
      position: absolute;
      border-radius: 20px;
      top: 10vh;
      z-index: 10;
      background-color: white;
      overflow: hidden;

      & .form-question-header {
        width: 100%;
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-around;
        position: relative;
        margin-bottom: 15px;

        & button {

          cursor: pointer;
          background-color: #00E1B4;
          color: white;
          border: none;
          padding: 12px;
          margin-top: 15px;
          width: 200px;
          border-radius: 4px;
          font-size: 12px;
          cursor: pointer;
          transition: background-color 0.3s;
          position: fixed;
          z-index: 100;
        }

        & .close-cross {
          width: 50px;
          position: absolute;
          top: 20px;
          right: 10px;
          cursor: pointer;
          font-size: 20px;
        }
      }

      & .form-question-container {
        width: 100%;
        height: 500px;
        overflow-y: scroll;
      }

    }

    .tests-container-form::-webkit-scrollbar {
      display: none;
    }

    /* Hide scrollbar for IE, Edge and Firefox */
    .tests-container-form {
      -ms-overflow-style: none;
      /* IE and Edge */
      scrollbar-width: none;
      /* Firefox */
    }

    .answer-block-container {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .answer-block {
      width: 100%;
      height: 350px;
      padding: 45px;
    }

    .answer-input {
      width: 90% !important;
      margin: 10px 0 0 5%;
    }

    .correct-answer-select {
      width: 100% !important;
      height: 30px;
      padding-left: 15px;
      border: 1px solid #ddd;
      background-color: white;
      border-radius: 4px;
      font-size: 12px;
      margin: 10px 0 0 0;
    }

    .score-span-good {
      background-color: green;
      padding: 5px 8px;
      color: #fff;
      border-radius: 8px;
      font-weight: bold;
    }

    .score-span-regular {
      background-color: orange;
      padding: 5px 8px;
      color: #fff;
      border-radius: 8px;
      font-weight: bold;
    }

    .score-span-bad {
      background-color: red;
      padding: 5px 8px;
      color: #fff;
      border-radius: 8px;
      font-weight: bold;
    }
  </style>
</head>

<body>
  <div class="admin-container">
    <div class="lateral-menu">
      <h1 class="admin_main_title" id="admin_main_title_id">Resultados ></h1>
      <div onclick="displayContainers('resultados')">Resutados</div>
      <div onclick="displayContainers('usuarios')">Usuarios</div>
      <div onclick="displayContainers('contenido')">Contenido</div>
      <div onclick="displayContainers('tests')">Tests</div>
    </div>

    <!-- RESULTADOS EXAMENES -->
    <div id="exam-results-id" class="exam-results">
      <div class="exam-results-header">
        <div class="user-header-form">
          <input type="text" placeholder="Email" id="mail_search_id" />
          <select class="select-content-name" name="content_name_search" id="content_name_search_id">
            <option value="" selected></option>
            <% content_techs.forEach((tech)=> { %>
              <option value="<%= tech.id %>">
                <%= tech.name %>
              </option>
              <% }); %>
          </select>
          <span onclick="searchResults()">Filtrar</span>
        </div>
      </div>
      <div id="exam-results-items-container-id" class="exam-results-items-container"></div>
    </div>

    <!-- USUARIOS -->
    <div id="users-container-id" class="users-container">
      <div class="user-header">
        <span>Crear usuario:</span>
        <div class="user-header-form">
          <input type="text" id="email" placeholder="Email" />
          <input type="text" id="password" placeholder="ContraseÃ±a" />
          <span onclick="createUser()">+ Crear</span>
        </div>
      </div>
      <div id="user-items-container-id" class="user-items-container"></div>
    </div>

    <!-- CONTENIDO -->
    <div id="content-container-id" class="content-container">
      <div class="content-header">
        <span>Crear contenido:</span>
        <div class="content-header-form">
          <input type="text" id="content-name" placeholder="Nombre" />
          <input type="file" id="file-id" />
          <span onclick="createContent()">+ Crear</span>
        </div>
      </div>
      <div id="content-items-container-id" class="content-items-container"></div>
    </div>


    <!-- PREGUNTAS EXAMENES -->
    <div id="tests-container-id" class="tests-container">
      <div id="tests-items-container-id" class="tests-items-container">
      </div>
    </div>

    <!-- FORMULARIO PREGUNTAS -->
    <div id="tests-container-id-form" class="tests-container-form">
      <div class="form-question-header">
        <p onclick="closeQuestionModal()" class="close-cross">x</p>
        <button onclick="postQuestions()">Guardar preguntas</button>
      </div>
      <form id="form-question-container-id" class="form-question-container"></form>
    </div>

  </div>
</body>
<script>
  /* VARIABLES GLOBALES Y SETEO INICIAL */
  document.body.style.background = 'url("/images/<%= background_image %>") no-repeat center center fixed';
  document.body.style.backgroundSize = 'cover'; // Ensures full coverage
  var contentId = null;
  var blockCreateContent = false;
  var filterResultsName = "";
  var filterResultsContentType = "";
  var content_question = <%- JSON.stringify(content_question) %>;
  var content_techs = <%- JSON.stringify(content_techs) %>;
  var users = <%- JSON.stringify(users) %>;
  var results = <%- JSON.stringify(results) %>;

  const showResults = (res_inner) => {
    const shownObjects = [];
    const resultContainer = document.getElementById("exam-results-items-container-id")
    resultContainer.innerHTML = ""

    const defineClass = (score) => {
      if (score > 80) return "score-span-good"
      if (score < 60) return "score-span-bad"
      return "score-span-regular"
    }

    res_inner.forEach((res) => {
      if (!shownObjects.includes(`${res.content_id}-${res.user_id}`)) {
        shownObjects.push(`${res.content_id}-${res.user_id}`);
        const content_name = content_techs.filter((ctn) => ctn.id == res.content_id).pop().name
        resultContainer.innerHTML += `<div class="exam-results-item">
            <span>
              ${res.email}
            </span>
            <span><b>
               ${content_name}
              </b></span>
            <span>
               ${res.created}
            </span>
            <span class=${defineClass(res.score)}>
               ${res.score}%
            </span>
          </div>`
      }
    })
  }

  const searchResults = () => {
    const email = document.getElementById("mail_search_id").value
    const content = document.getElementById("content_name_search_id").value
    const filtered = results.filter((res) => {
      if (email && content) return res.email.includes(email) && res.content_id == Number(content)
      if (email && !content) return res.email.includes(email)
      if (!email && content) return res.content_id == Number(content)
      return true
    })
    showResults(filtered)
  }

  const showContent = () => {
    const contentContainer = document.getElementById("content-items-container-id")
    contentContainer.innerHTML = "";
    content_techs.forEach((tech) => {
      contentContainer.innerHTML += `<div class="content-item">
            <span><b>
                ${tech.name}
              </b>
            </span>
            <a target="_blank" href="${window.location.protocol}//${window.location.host}/content-files/${tech.filename}">pdf</a>
           <span onclick="deleteContent(${tech.content_id})">Eliminar</span>
          </div>`
    })
  }

  const showUsers = () => {
    const userContainer = document.getElementById("user-items-container-id")
    userContainer.innerHTML = "";
    users.forEach((user) => {
      userContainer.innerHTML += `<div class="user-item">
            <span><b>
                ${user.email}
              </b>
            </span>
            <span>
              ContraseÃ±a: ${user.password}
            </span>
            <span onclick="deleteUser('${user.id}')">Eliminar</span>
          </div>`
    })
  }

  const showTestContent = () => {
    const testContainer = document.getElementById("tests-items-container-id")
    testContainer.innerHTML = "";
    content_question.forEach((content) => {
      testContainer.innerHTML += `
          <div onclick="openQuestionModal('${content.id}')" class="tests-item">
            <span><b>
                ${content.name}
              </b>
            </span>
          </div>
          `
    })
  }

  const displayQuestionForm = (questions) => {
    if (!questions) return
    const testContainer = document.getElementById("form-question-container-id");
    [...Array(50).keys()].forEach((item, index) => {
      testContainer.innerHTML += `
        <div class="answer-block">
          <p>Pregunta ${index + 1}</p><br />
          <textarea id="question_${index}_id" placeholder="Escriba pregunta"></textarea><br />

          <span>A</span><input id="answer_${index}_a_id" type="text" class="answer-input" placeholder="Respuesta A" /><br />
          
          <span>B</span><input id="answer_${index}_b_id" type="text" class="answer-input" placeholder="Respuesta B" /><br />
          
          <span>C</span><input id="answer_${index}_c_id" type="text" class="answer-input" placeholder="Respuesta C" /><br />
          
          <span>D</span><input id="answer_${index}_d_id" type="text" class="answer-input" placeholder="Respuesta D" /><br />
          
          <select class="correct-answer-select" name="correct_answer_${index}_name" id="correct_answer_${index}_id">
            <option value="" disabled selected>Respuesta correcta</option>
            <option value="A">A</option>
            <option value="B">B</option>
            <option value="C">C</option>
            <option value="D">D</option>
          </select>
        </div>`
    });
    [...Array(50).keys()].forEach((item, index) => {
      if (questions[index]) {
        document.getElementById(`question_${index}_id`).value = questions[index].question
        document.getElementById(`answer_${index}_a_id`).value = questions[index].answer_a
        document.getElementById(`answer_${index}_b_id`).value = questions[index].answer_b
        document.getElementById(`answer_${index}_c_id`).value = questions[index].answer_c
        document.getElementById(`answer_${index}_d_id`).value = questions[index].answer_d
        document.getElementById(`correct_answer_${index}_id`).value = questions[index].correct_answer
      }
    })
  }

  const openQuestionModal = (id) => {
    contentId = id;
    const filteredContent = content_question.filter((cnt) => cnt.id == id).pop()
    document.getElementById("tests-container-id-form").style.display = "block"
    displayQuestionForm(filteredContent.questions)
  }

  const postQuestions = async (id) => {
    const filteredContent = content_question.filter((cnt) => cnt.id == contentId).pop()
    const payload = [...Array(50).keys()].map((item, index) => {
      return {
        id: filteredContent.questions[index]?.id || null,
        question: document.getElementById(`question_${index}_id`).value,
        answer_a: document.getElementById(`answer_${index}_a_id`).value,
        answer_b: document.getElementById(`answer_${index}_b_id`).value,
        answer_c: document.getElementById(`answer_${index}_c_id`).value,
        answer_d: document.getElementById(`answer_${index}_d_id`).value,
        correct_answer: document.getElementById(`correct_answer_${index}_id`).value || "",
      }
    })
    fetch('/post-questions', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
        token: localStorage.getItem("minibit-token"),
      },
      body: JSON.stringify({
        contentId: contentId,
        payload: payload
      })
    }).then((response) => {
      if (!response.ok) {
        alert("Lo sentimos. Algo saliÃ³ mal.")
      }
      alert("Respuestas guardadas con exito.")
      filteredContent.questions = payload;
    }).catch(() => {
      alert("Lo sentimos. Algo saliÃ³ mal.")
    });
  }

  const deleteUser = async (id) => {
    const response = await fetch('/delete-user', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
        token: localStorage.getItem("minibit-token"),
      },
      body: JSON.stringify({
        userId: id,
      })
    }).then(() => {
      alert("Usuario eliminado.")
      users = users.filter((user) => Number(user.id) !== Number(id))
      showUsers()
    });
  }

  const deleteContent = async (id) => {
    const response = await fetch('/delete-content', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
        token: localStorage.getItem("minibit-token"),
      },
      body: JSON.stringify({
        contentId: id,
      })
    }).then(() => {
      alert("Contenido eliminado.")
      content_techs = content_techs.filter((tech) => tech.content_id != id)
      showContent()
    }).catch(() => {
      alert("Algo fallo.")
    });
  }

  const closeQuestionModal = () => {
    document.getElementById("tests-container-id-form").style.display = "none"
  }

  const displayContainers = (container) => {
    document.getElementById("exam-results-id").style.display = "none"
    document.getElementById("users-container-id").style.display = "none"
    document.getElementById("content-container-id").style.display = "none"
    document.getElementById("tests-container-id").style.display = "none"

    const admin_title = document.getElementById("admin_main_title_id")
    admin_title.innerHTML = container + " >";

    if (container == "usuarios") document.getElementById("users-container-id").style.display = "block"
    if (container == "resultados") document.getElementById("exam-results-id").style.display = "block"
    if (container == "contenido") document.getElementById("content-container-id").style.display = "block"
    if (container == "tests") document.getElementById("tests-container-id").style.display = "block"
  }

  const createContent = async () => {

    if (blockCreateContent) return
    blockCreateContent = true

    const fileInput = document.getElementById('file-id');
    const contentName = document.getElementById('content-name').value;
    const file = fileInput.files[0];

    // Check if a file was selected
    if (!file) {
      alert('Debe seleccionar un archivo');
      return;
    }

    // Check if the file is a PDF
    if (file.type !== 'application/pdf') {
      alert('El archivo debe ser PDF');
      return;
    }

    // Prepare the form data
    const formData = new FormData();
    formData.append('pdfFile', file);
    formData.append('contentName', contentName);

    try {
      // Send the file to the server
      fetch('/create-content', {
        method: 'POST',
        headers: {
          token: localStorage.getItem("minibit-token"),
        },
        body: formData
      }).then(async (response) => {
        if (response.ok) {
          const result = await response.json();
          alert('Contenido subido exitosamente.');
          content_techs.push({ name: result.name, filename: result.filename, content_id: result.id })
          content_question.push({ name: result.name, id: result.id, questions: [] })
          showContent()
          showTestContent()
        } else {
          throw new Error('Upload failed');
        }
      }).catch(() => {
        alert('Lo sentimos. Algo fallÃ³.');
      }).finally(() => {
        blockCreateContent = false
      })
    } catch (error) {
      alert('Lo sentimos. Algo fallÃ³.');
    }
  }

  const createUser = async () => {

    const email = document.getElementById("email").value || "";
    const password = document.getElementById("password").value || "";

    if (!email || !password) {
      alert("Datos incorrectos");
      return;
    }

    fetch(`${window.location.protocol}//${window.location.host}/create-user`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        token: localStorage.getItem("minibit-token"),
      },
      body: JSON.stringify({
        email: email,
        password: password,
      }),
    }).then(async (response) => {
      if (!response.ok) {
        alert("Lo sentimos, algo fallÃ³.");
        return
      }
      alert("Usuario creado");

      const result = await response.json();
      const userContainer = document.getElementById("user-items-container-id")

      users.push({ email: email, password: password, id: result.user })
      showUsers()
      document.getElementById("email").value = "";
      document.getElementById("password").value = "";

    }).catch(() => {
      alert("Lo sentimos, algo fallÃ³.");
    });
  }

  setTimeout(() => {
    showContent()
    showUsers()
    displayQuestionForm()
    showTestContent()
    showResults(results)
  }, 100)

</script>

</html>